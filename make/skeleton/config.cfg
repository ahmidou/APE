application:
{
	log_console = false;
	use_buffers = true;
	use_fpe = false;
	num_channels = 2;
	force_single_precision = true;
	greeting_shown = true;
	unique_id = 4280389;
	ui_refresh_interval = 80;
	console_std_writing = false;
	autosave_interval = 60;
	render_opengl = false;
	use_tcc_convention_hack = true;
}



editor:

{
	
	hkey_save = "cmd+s";

	hkey_open = "cmd+o";

	hkey_new = "cmd+n";

}



languages:
{

	default = "c";
	default_file = "/examples/template.c";

	c:
	{

		extensions = ("c", "h", "cc");

		compiler:
		{
			name = "Tcc4Ape";
			path = "/compilers/tcc4ape/tcc4ape.dll";
			arguments = "-D_USE_TCC_HEADERS";
			exports:
			{

			}
		}
		
		lexer:
		{
			scilex_number = 3;
			
			keywords:
			{
				color = "blue";
				words = "and __asm break case catch const continue "
					"default do else explicit export extern for "
					"goto if inline mutable register auto return "
					"signed sizeof static switch false true typedef "
					"unsigned void volatile wchar_t while";
			}
			types:
			{
				color = "blue";
				words = "float double bool char short int long struct union enum";

			}

			userdefined:
			{
				color = "blue";
				words = "color this self knobType status VstFloat VstInt32 api";

			}
		}
		

	}

	cpp:
	{

		extensions = ("cpp", "hpp", "c++", "h", "h++");

		compiler:
		{
			name = "CppApe";
			path = "/compilers/CppAPE/CppAPE.dll";
			arguments = "-D_USE_TCC_HEADERS";
			exports:
			{

			}
		}
		
		lexer:
		{
			scilex_number = 3;
			
			keywords:
			{
				color = "blue";
				words = "and __asm break case catch const continue "
					"default do else explicit export extern for "
					"goto if inline mutable register auto return "
					"signed sizeof static switch false true typedef "
					"unsigned void volatile wchar_t while";
			}
			types:
			{
				color = "blue";
				words = "float double bool char short int long struct union enum";

			}

			userdefined:
			{
				color = "blue";
				words = "color this self knobType status VstFloat VstInt32 api";

			}
		}
		

	}

	xx:
	{

		extensions = ("c");

		compiler:
		{
			name = "syswrap";
			path = "/compilers/syswrap/syswrap.dll";
			arguments = "";
			exports:
			{

			}
		}
		
		lexer:
		{
			scilex_number = 3;
			
			keywords:
			{
				color = "blue";
				words = "and __asm break case catch const continue "
					"default do else explicit export extern for "
					"goto if inline mutable register auto return "
					"signed sizeof static switch false true typedef "
					"unsigned void volatile wchar_t while";
			}
			types:
			{
				color = "blue";
				words = "float double bool char short int long struct union enum";

			}

			userdefined:
			{
				color = "blue";
				words = "color this self knobType status VstFloat VstInt32 api";

			}
		}
		

	}

}